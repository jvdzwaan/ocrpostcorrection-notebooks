stages:
  # Shared/misc
  data-split:
    cmd: >
      python src/stages/data-split.py
      --raw-dataset ${base.raw-data-zip}
      --train-split ${data-split.train-split}
      --val-split ${data-split.val-split}
      --test-split ${data-split.test-split}
      --val-size ${data-split.val-size}
      --seed ${base.seed}
    deps:
      - src/stages/data-split.py
      - ${base.raw-data-zip}
    params:
      - base
      - data-split
    outs:
      - ${data-split.train-split}
      - ${data-split.val-split}
      - ${data-split.test-split}
  generate-perfect-icdar-json:
    cmd: >
      python src/stages/generate-perfect-icdar-json.py
      --raw-dataset ${base.raw-data-zip}
      --out-file-detection ${generate-perfect-icdar-json.out-file-detection}
      --out-file-correction ${generate-perfect-icdar-json.out-file-correction}
    deps:
      - src/stages/generate-perfect-icdar-json.py
      - ${base.raw-data-zip}
    params:
      - base
      - generate-perfect-icdar-json
    outs:
      - ${generate-perfect-icdar-json.out-file-detection}
      - ${generate-perfect-icdar-json.out-file-correction}

  # Error detection
  create-error-detection-dataset:
    cmd: >
      python src/stages/create-error-detection-dataset.py
      --raw-dataset ${base.raw-data-zip}
      --train-split ${data-split.train-split}
      --val-split ${data-split.val-split}
      --test-split ${data-split.test-split}
      --size ${create-error-detection-dataset.size}
      --step ${create-error-detection-dataset.step}
      --max-ed ${create-error-detection-dataset.max-edit-distance}
      --dataset-out ${create-error-detection-dataset.dataset}
    deps:
      - src/stages/create-error-detection-dataset.py
      - ${data-split.train-split}
      - ${data-split.val-split}
      - ${data-split.test-split}
      - ${base.raw-data-zip}
    params:
      - base
      - data-split
      - create-error-detection-dataset
    outs:
      - ${create-error-detection-dataset.dataset}
  train-error-detection:
    cmd: >
      python src/stages/train-error-detection.py
      --seed ${base.seed}
      --dataset-in ${create-error-detection-dataset.dataset}
      --model-name ${train-error-detection.pretrained-model-name}
      --evaluation-strategy ${train-error-detection.evaluation-strategy}
      --per-device-train-batch-size ${train-error-detection.per-device-train-batch-size}
      --num-train-epochs ${train-error-detection.num-train-epochs}
      --load-best-model-at-end
      --save-strategy ${train-error-detection.save-strategy}
      --delete-checkpoints
      --model-dir ${train-error-detection.output-dir}
      --train-log ${train-error-detection.train-log}
    deps:
      - src/stages/train-error-detection.py
      - ${create-error-detection-dataset.dataset}
    params:
      - base
      - create-error-detection-dataset
      - train-error-detection
    outs:
      - ${train-error-detection.train-log}:
          cache: false
      - ${train-error-detection.output-dir}
  predict-test-set-error-detection:
    cmd: >
      python src/stages/predict-test-set-error-detection.py
      --seed ${base.seed}
      --dataset-in ${create-error-detection-dataset.dataset}
      --model-dir ${train-error-detection.output-dir}
      --model-name ${train-error-detection.pretrained-model-name}
      --evaluation-strategy ${train-error-detection.evaluation-strategy}
      --eval-batch-size ${train-error-detection.per-device-train-batch-size}
      --num-train-epochs ${train-error-detection.num-train-epochs}
      --predictions-out ${predict-test-set-error-detection.predictions}
      --test-log ${predict-test-set-error-detection.test-log}
    deps:
      - src/stages/predict-test-set-error-detection.py
      - ${create-error-detection-dataset.dataset}
      - ${train-error-detection.output-dir}
    params:
      - base
      - create-error-detection-dataset
      - train-error-detection
      - predict-test-set-error-detection
    outs:
      - ${predict-test-set-error-detection.test-log}:
          cache: false
      - ${predict-test-set-error-detection.predictions}
  convert-error-detection-predictions-to-icdar-output:
    cmd: >
      python src/stages/convert-error-detection-predictions-to-icdar-output.py
      --dataset-in ${create-error-detection-dataset.dataset}
      --model-name ${train-error-detection.pretrained-model-name}
      --predictions-in ${predict-test-set-error-detection.predictions}
      --raw-dataset ${base.raw-data-zip}
      --json-out ${convert-error-detection-predictions-to-icdar-output.icdar-output-json}
    deps:
      - src/stages/convert-error-detection-predictions-to-icdar-output.py
      - ${base.raw-data-zip}
      - ${create-error-detection-dataset.dataset}
      - ${predict-test-set-error-detection.predictions}
    params:
      - base
      - train-error-detection
      - predict-test-set-error-detection
      - convert-error-detection-predictions-to-icdar-output
    outs:
      - ${convert-error-detection-predictions-to-icdar-output.icdar-output-json}
  evaluate-error-detection:
    cmd: >
      python src/stages/run-icdar-evaluation.py
      --raw-dataset ${base.raw-data-zip}
      --json-file ${convert-error-detection-predictions-to-icdar-output.icdar-output-json}
      --csv-file ${evaluate-error-detection.icdar-output-csv}
    deps:
      - src/stages/run-icdar-evaluation.py
      - ${base.raw-data-zip}
      - ${convert-error-detection-predictions-to-icdar-output.icdar-output-json}
    params:
      - base
      - convert-error-detection-predictions-to-icdar-output
      - evaluate-error-detection
    outs:
      - ${evaluate-error-detection.icdar-output-csv}
  generate-error-detection-report:
    cmd: >
      python src/stages/generate-error-detection-report.py
      --evaluation-csv ${evaluate-error-detection.icdar-output-csv}
      --train-log-file ${train-error-detection.train-log}
      --test-log-file ${predict-test-set-error-detection.test-log}
      --seed ${base.seed}
      --val-size ${data-split.val-size}
      --max-ed ${create-error-detection-dataset.max-edit-distance}
      --size ${create-error-detection-dataset.size}
      --step ${create-error-detection-dataset.step}
      --model-name ${train-error-detection.pretrained-model-name}
      --metrics-file ${generate-error-detection-report.metrics}
      --report-file ${generate-error-detection-report.report-file}
    deps:
      - src/stages/generate-error-detection-report.py
      - templates/report-error-detection.md
      - ${train-error-detection.train-log}
      - ${predict-test-set-error-detection.test-log}
      - ${evaluate-error-detection.icdar-output-csv}
    params:
      - base
      - data-split
      - create-error-detection-dataset
      - train-error-detection
      - predict-test-set-error-detection
      - evaluate-error-detection
    outs:
      - ${generate-error-detection-report.report-file}:
          cache: false
    metrics:
      - ${generate-error-detection-report.metrics}:
          cache: false

  # Error correction
  create-error-correction-dataset:
    cmd: >
      python src/stages/create-error-correction-dataset.py
      --raw-dataset ${base.raw-data-zip}
      --val-split ${data-split.val-split}
      --dataset-out ${create-error-correction-dataset.dataset}
    deps:
      - src/stages/create-error-correction-dataset.py
      - ${data-split.val-split}
      - ${base.raw-data-zip}
    params:
      - base
      - data-split
      - create-error-correction-dataset
    outs:
      - ${create-error-correction-dataset.dataset}
  train-error-correction:
    cmd: >
      python src/stages/train-error-correction.py
      --seed ${base.seed}
      --dataset ${create-error-correction-dataset.dataset}
      --max-len ${train-error-correction.max-len}
      --batch-size ${train-error-correction.batch-size}
      --hidden-size ${train-error-correction.hidden-size}
      --dropout ${train-error-correction.dropout}
      --teacher-forcing-ratio ${train-error-correction.teacher-forcing-ratio}
      --num-epochs ${train-error-correction.num-epochs}
      --valid-niter ${train-error-correction.valid-niter}
      --max-num-patience ${train-error-correction.max-num-patience}
      --max-num-trial ${train-error-correction.max-num-trial}
      --lr-decay ${train-error-correction.lr-decay}
      --model-save-path ${train-error-correction.model-save-path}
      --train-log ${train-error-correction.train-log}
    deps:
      - src/stages/train-error-correction.py
      - ${create-error-correction-dataset.dataset}
    params:
      - base
      - create-error-correction-dataset
      - train-error-correction
    outs:
      - ${train-error-correction.train-log}:
          cache: false
      - ${train-error-correction.model-save-path}
  predict-error-correction:
    cmd: >
      python src/stages/predict-error-correction.py
      --error-correction-dataset ${create-error-correction-dataset.dataset}
      --hidden-size ${train-error-correction.hidden-size}
      --dropout ${train-error-correction.dropout}
      --max-len ${train-error-correction.max-len}
      --teacher-forcing-ratio ${train-error-correction.teacher-forcing-ratio}
      --model-path ${train-error-correction.model-save-path}
      --batch-size ${train-error-correction.batch-size}
      --calculate-loss
      --test-log-file ${predict-error-correction.test-log}
      --raw-dataset ${base.raw-data-zip}
      --perfect-detection-in ${generate-perfect-icdar-json.out-file-detection}
      --perfect-detection-out ${predict-error-correction.perfect-detection-out}
      --predicted-detection-in ${convert-error-detection-predictions-to-icdar-output.icdar-output-json}
      --predicted-detection-out ${predict-error-correction.predicted-detection-out}
    deps:
      - src/stages/predict-error-correction.py
      - ${create-error-correction-dataset.dataset}
      - ${base.raw-data-zip}
      - ${generate-perfect-icdar-json.out-file-detection}
      - ${convert-error-detection-predictions-to-icdar-output.icdar-output-json}
    params:
      - create-error-correction-dataset
      - train-error-correction
      - convert-error-detection-predictions-to-icdar-output
      - generate-perfect-icdar-json
      - predict-error-correction
    outs:
      - ${predict-error-correction.test-log}
      - ${predict-error-correction.perfect-detection-out}
      - ${predict-error-correction.predicted-detection-out}
  convert-perfect-correction-predicted-detection-results-to-icdar-format:
    cmd: >
      python src/stages/convert-error-correction-predictions-to-icdar-format.py
      --predictions ${predict-error-correction.perfect-detection-out}
      --icdar-json ${generate-perfect-icdar-json.out-file-detection}
      --out-file ${convert-perfect-correction-predicted-detection-results-to-icdar-format.out-file}
    deps:
      - src/stages/convert-error-correction-predictions-to-icdar-format.py
      - ${predict-error-correction.perfect-detection-out}
      - ${generate-perfect-icdar-json.out-file-detection}
    params:
      - predict-error-correction
      - generate-perfect-icdar-json
      - convert-perfect-correction-predicted-detection-results-to-icdar-format
    outs:
      - ${convert-perfect-correction-predicted-detection-results-to-icdar-format.out-file}
  evaluate-error-correction-perfect-detection:
    cmd: >
      python src/stages/run-icdar-evaluation.py
      --raw-dataset ${base.raw-data-zip}
      --json-file ${convert-perfect-correction-predicted-detection-results-to-icdar-format.out-file}
      --csv-file ${evaluate-error-correction-perfect-detection.icdar-output-csv}
    deps:
      - src/stages/run-icdar-evaluation.py
      - ${base.raw-data-zip}
      - ${convert-perfect-correction-predicted-detection-results-to-icdar-format.out-file}
    params:
      - base
      - convert-error-detection-predictions-to-icdar-output
      - evaluate-error-correction-perfect-detection
    outs:
      - ${evaluate-error-correction-perfect-detection.icdar-output-csv}
  convert-predicted-correction-predicted-detection-results-to-icdar-format:
    cmd: >
      python src/stages/convert-error-correction-predictions-to-icdar-format.py
      --predictions ${predict-error-correction.predicted-detection-out}
      --icdar-json ${convert-error-detection-predictions-to-icdar-output.icdar-output-json}
      --out-file ${convert-predicted-correction-predicted-detection-results-to-icdar-format.out-file}
    deps:
      - src/stages/convert-error-correction-predictions-to-icdar-format.py
      - ${convert-error-detection-predictions-to-icdar-output.icdar-output-json}
      - ${predict-error-correction.predicted-detection-out}
    params:
      - predict-error-correction
      - convert-error-detection-predictions-to-icdar-output
      - convert-predicted-correction-predicted-detection-results-to-icdar-format
    outs:
      - ${convert-predicted-correction-predicted-detection-results-to-icdar-format.out-file}
  evaluate-error-correction-predicted-detection:
    cmd: >
      python src/stages/run-icdar-evaluation.py
      --raw-dataset ${base.raw-data-zip}
      --json-file ${convert-predicted-correction-predicted-detection-results-to-icdar-format.out-file}
      --csv-file ${evaluate-error-correction-predicted-detection.icdar-output-csv}
    deps:
      - src/stages/run-icdar-evaluation.py
      - ${base.raw-data-zip}
      - ${convert-predicted-correction-predicted-detection-results-to-icdar-format.out-file}
    params:
      - base
      - convert-error-detection-predictions-to-icdar-output
      - evaluate-error-correction-predicted-detection
    outs:
      - ${evaluate-error-correction-predicted-detection.icdar-output-csv}
  generate-error-correction-report:
    cmd: >
      python src/stages/generate-error-correction-report.py
      --train-log ${train-error-correction.train-log}
      --test-log ${predict-error-correction.test-log}
      --eval-perfect-detection ${evaluate-error-correction-perfect-detection.icdar-output-csv}
      --eval-predicted-detection ${evaluate-error-correction-predicted-detection.icdar-output-csv}
      --metrics-file ${generate-error-correction-report.metrics}
      --seed ${base.seed}
      --val-size ${data-split.val-size}
      --max-len ${train-error-correction.max-len}
      --report-file ${generate-error-correction-report.report-file}
    deps:
      - src/stages/generate-error-correction-report.py
      - templates/report-error-correction.md
      - ${train-error-correction.train-log}
      - ${predict-error-correction.test-log}
      - ${evaluate-error-correction-perfect-detection.icdar-output-csv}
      - ${evaluate-error-correction-predicted-detection.icdar-output-csv}
    params:
      - base
      - data-split
      - create-error-detection-dataset
      - train-error-correction
      - predict-error-correction
      - evaluate-error-correction-perfect-detection
      - evaluate-error-correction-predicted-detection
      - generate-error-correction-report
    outs:
      - ${generate-error-correction-report.report-file}:
          cache: false
    metrics:
      - ${generate-error-correction-report.metrics}:
          cache: false
